apiVersion: apps/v1
kind: Deployment
metadata:
  name: spaces-deployment
  namespace: space-place
  labels:
    app.kubernetes.io/name: spaces-deployment 
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: space-place
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: spaces-pod
  template:
    metadata:
      namespace: space-place
      labels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: spaces-pod 
    spec:
      serviceAccountName: aws-credentials-serviceaccount
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                - sp-general
                - sp-spot

      containers:
      - name: spaces-container
        image: 148761649775.dkr.ecr.ap-northeast-2.amazonaws.com/space-place/space:e5ddc81caab17aa9b8ec7885ca3ef582b7d3fe3e
          # image: 148761649775.dkr.ecr.ap-northeast-2.amazonaws.com/space-place/space:e5ddc81caab17aa9b8ec7885ca3ef582b7d3fe3e
        volumeMounts:
          - name: secret-volume
            mountPath: /etc/secret-volume
          - name: ca
            mountPath: /etc/ssl/certs
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 256Mi
      volumes:
        - name: secret-volume
          secret:
            secretName: aws-credentials
        - name: ca
          secret:
            secretName: ca
